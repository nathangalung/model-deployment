apiVersion: kustomize.config.k8s.io/v1
kind: Kustomization

resources:
# Infrastructure assumed to be managed externally in staging
# Only include Kubeflow applications

# Cluster-scoped resources and CRDs
- ../../../manifests/applications/pipeline/upstream/cluster-scoped-resources

# Basic Kubeflow components
- ../../../manifests/applications/pipeline/upstream/base/installs/generic

# Third-party components
- ../../../manifests/applications/pipeline/upstream/third-party/minio/base
- ../../../manifests/applications/pipeline/upstream/third-party/mysql/base

# Jupyter Notebooks
- ../../../manifests/applications/jupyter/jupyter-web-app/upstream/base
- ../../../manifests/applications/jupyter/notebook-controller/upstream/overlays/kubeflow

# Volumes Web App
- ../../../manifests/applications/volumes-web-app/upstream/base

# MLflow for model registry
- mlflow-config.yaml

namespace: kubeflow

patches:
- path: resource-limits-staging.yaml
- path: ingress-staging.yaml

# Fix namespace conflicts
replacements:
- source:
    kind: Namespace
    name: kubeflow
    fieldPath: metadata.name
  targets:
  - select:
      kind: Namespace
    fieldPaths:
    - metadata.name

# Staging environment scaling
replicas:
- name: ml-pipeline
  count: 2
- name: ml-pipeline-ui
  count: 2
- name: metadata-grpc-deployment
  count: 2
- name: minio
  count: 1
- name: mysql
  count: 1
- name: mlflow-server
  count: 2

# Staging storage configuration
patchesStrategicMerge:
- storage-staging.yaml

# Add staging-specific configs
configMapGenerator:
- name: environment-config
  literals:
  - ENVIRONMENT=staging
  - LOG_LEVEL=info
  - MINIO_ENDPOINT=minio.staging.example.com
  - MLFLOW_ENDPOINT=mlflow.staging.example.com